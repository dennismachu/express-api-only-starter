{"version":3,"sources":["../../../src/main/logger/index.js"],"names":["logConfiguration","transports","winston","Console","level","format","combine","label","timestamp","printf","warn","message","File","filename","info","logger","createLogger"],"mappings":";;;;;;;;;AAAA;;AACA;AACA,IAAMA,gBAAgB,GAAG;AACvBC,EAAAA,UAAU,EAAE,CACV,IAAIC,oBAAQD,UAAR,CAAmBE,OAAvB,CAA+B;AAC7BC,IAAAA,KAAK,EAAE,MADsB;AAE7BC,IAAAA,MAAM,EAAEH,oBAAQG,MAAR,CAAeC,OAAf,CACNJ,oBAAQG,MAAR,CAAeE,KAAf,CAAqB;AACnBA,MAAAA,KAAK;AADc,KAArB,CADM,EAINL,oBAAQG,MAAR,CAAeG,SAAf,CAAyB;AACvBH,MAAAA,MAAM,EAAE;AADe,KAAzB,CAJM,EAONH,oBAAQG,MAAR,CAAeI,MAAf,CACE,UAAAC,IAAI;AAAA,uBACCA,IAAI,CAACN,KADN,eACgBM,IAAI,CAACH,KADrB,eAC+B,CAACG,IAAI,CAACF,SAAN,CAD/B,eAEAE,IAAI,CAACC,OAFL;AAAA,KADN,CAPM;AAFqB,GAA/B,CADU,EAkBV,IAAIT,oBAAQD,UAAR,CAAmBW,IAAvB,CAA4B;AAC1BR,IAAAA,KAAK,EAAE,OADmB;AAE1B;AACAS,IAAAA,QAAQ,EAAE;AAHgB,GAA5B,CAlBU,EAuBV,IAAIX,oBAAQD,UAAR,CAAmBW,IAAvB,CAA4B;AAC1BR,IAAAA,KAAK,EAAE,MADmB;AAE1B;AACAC,IAAAA,MAAM,EAAEH,oBAAQG,MAAR,CAAeC,OAAf,CACNJ,oBAAQG,MAAR,CAAeE,KAAf,CAAqB;AACnBA,MAAAA,KAAK;AADc,KAArB,CADM,EAINL,oBAAQG,MAAR,CAAeG,SAAf,CAAyB;AACvBH,MAAAA,MAAM,EAAE;AADe,KAAzB,CAJM,EAONH,oBAAQG,MAAR,CAAeI,MAAf,CACE,UAAAK,IAAI;AAAA,uBACCA,IAAI,CAACV,KADN,eACgBU,IAAI,CAACP,KADrB,eAC+B,CAACO,IAAI,CAACN,SAAN,CAD/B,eAEAM,IAAI,CAACH,OAFL;AAAA,KADN,CAPM,CAHkB;AAiB1B;AACAE,IAAAA,QAAQ,EAAE;AAlBgB,GAA5B,CAvBU,EA2CV,IAAIX,oBAAQD,UAAR,CAAmBW,IAAvB,CAA4B;AAC1BR,IAAAA,KAAK,EAAE,OADmB;AAE1B;AACAS,IAAAA,QAAQ,EAAE;AAHgB,GAA5B,CA3CU;AADW,CAAzB;;AAmDA,IAAME,MAAM,GAAGb,oBAAQc,YAAR,CAAqBhB,gBAArB,CAAf;;eAEee,M","sourcesContent":["import winston from 'winston'\n// Logger configuration\nconst logConfiguration = {\n  transports: [\n    new winston.transports.Console({\n      level: 'warn',\n      format: winston.format.combine(\n        winston.format.label({\n          label: `â›” `,\n        }),\n        winston.format.timestamp({\n          format: 'MMM-DD-YYYY HH:mm:ss',\n        }),\n        winston.format.printf(\n          warn =>\n            `${warn.level}: ${warn.label}: ${[warn.timestamp]}: ${\n              warn.message\n            }`,\n        ),\n      ),\n    }),\n    new winston.transports.File({\n      level: 'error',\n      // Create the log directory if it does not exist\n      filename: 'src/main/logger/index.log',\n    }),\n    new winston.transports.File({\n      level: 'info',\n      //Create a format\n      format: winston.format.combine(\n        winston.format.label({\n          label: `ðŸ’¡`,\n        }),\n        winston.format.timestamp({\n          format: 'MMM-DD-YYYY HH:mm:ss',\n        }),\n        winston.format.printf(\n          info =>\n            `${info.level}: ${info.label}: ${[info.timestamp]}: ${\n              info.message\n            }`,\n        ),\n      ),\n      // Create the log directory if it does not exist\n      filename: 'src/main/logger/index.log',\n    }),\n    new winston.transports.File({\n      level: 'debug',\n      // Create the log directory if it does not exist\n      filename: 'src/main/logger/index.log',\n    }),\n  ],\n}\nconst logger = winston.createLogger(logConfiguration)\n\nexport default logger\n"],"file":"index.js"}