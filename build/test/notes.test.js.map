{"version":3,"sources":["../../src/test/notes.test.js"],"names":["should","chai","expect","use","chaiHttp","describe","notes","it","done","request","server","get","end","err","res","body","data","docs","have","status","success","to","equal","_id"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;AACA,IAAIA,MAAM,GAAGC,iBAAKD,MAAL,EAAb;;AACA,IAAIE,MAAM,GAAGD,iBAAKC,MAAlB;;AAEAD,iBAAKE,GAAL,CAASC,oBAAT;;AAEAC,QAAQ,CAAC,WAAD,EAAc,YAAM;AAC1B;AACF;AACA;AACE,MAAIC,KAAK,GAAG,EAAZ;AAEA;AACF;AACA;;AACED,EAAAA,QAAQ,CAAC,eAAD,EAAkB,YAAM;AAC9BE,IAAAA,EAAE,CAAC,yBAAD,EAA4B,UAAAC,IAAI,EAAI;AACpCP,uBACGQ,OADH,CACWC,iBADX,EAEGC,GAFH,CAEO,eAFP,EAGGC,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjB,YAAMC,IAAI,GAAGD,GAAG,CAACC,IAAjB;AACAT,QAAAA,KAAK,GAAGS,IAAI,CAACC,IAAL,CAAUC,IAAlB;AACAH,QAAAA,GAAG,CAACd,MAAJ,CAAWkB,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAjB,QAAAA,MAAM,CAACa,IAAI,CAACK,OAAN,CAAN,CAAqBC,EAArB,CAAwBC,KAAxB,CAA8B,IAA9B;AACAd,QAAAA,IAAI;AACL,OATH;AAUD,KAXC,CAAF;AAYD,GAbO,CAAR;AAeA;AACF;AACA;;AACEH,EAAAA,QAAQ,CAAC,uBAAD,EAA0B,YAAM;AACtCE,IAAAA,EAAE,CAAC,iCAAD,EAAoC,UAAAC,IAAI,EAAI;AAC5CP,uBACGQ,OADH,CACWC,iBADX,EAEGC,GAFH,CAEO,mBAAmBL,KAAK,CAAC,CAAD,CAAL,CAASiB,GAFnC,EAGGX,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjB,YAAMC,IAAI,GAAGD,GAAG,CAACC,IAAjB;AACAD,QAAAA,GAAG,CAACd,MAAJ,CAAWkB,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAjB,QAAAA,MAAM,CAACa,IAAI,CAACK,OAAN,CAAN,CAAqBC,EAArB,CAAwBC,KAAxB,CAA8B,IAA9B;AACAd,QAAAA,IAAI;AACL,OARH;AASD,KAVC,CAAF;AAWD,GAZO,CAAR;AAaD,CAxCO,CAAR","sourcesContent":["import chai from 'chai'\nimport chaiHttp from 'chai-http'\nimport faker from 'faker'\nimport server from '../main/index'\nimport {viewAllNotes} from '../main/app/notes/notesService.js'\nimport {database} from '../main/config/database'\n\n// Assertion Style\nlet should = chai.should()\nlet expect = chai.expect\n\nchai.use(chaiHttp)\n\ndescribe('Notes API', () => {\n  /**\n   * This variable will be used to hold the notes from the Find All Call\n   */\n  var notes = []\n\n  /**\n   *  Test GET all Notes Route\n   */\n  describe('GET all notes', () => {\n    it('It should GET all notes', done => {\n      chai\n        .request(server)\n        .get('/api/v1/notes')\n        .end((err, res) => {\n          const body = res.body\n          notes = body.data.docs\n          res.should.have.status(200)\n          expect(body.success).to.equal(true)\n          done()\n        })\n    })\n  })\n\n  /**\n   *  Test GET a Note Route\n   */\n  describe('GET /api/v1/notes/:id', () => {\n    it('It should GET notes by their ID', done => {\n      chai\n        .request(server)\n        .get('/api/v1/notes/' + notes[0]._id)\n        .end((err, res) => {\n          const body = res.body\n          res.should.have.status(200)\n          expect(body.success).to.equal(true)\n          done()\n        })\n    })\n  })\n})\n"],"file":"notes.test.js"}